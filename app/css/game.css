@charset 'UTF-8';
@font-face {
    font-family: 'SourceHanSansJP-Normal';
    src: url('../font/SourceHanSansJP-Normal.otf') format('opentype');
}
@font-face {
    font-family: 'SourceHanSerifJP-Medium';
    src: url('../font/SourceHanSerifJP-Medium.otf') format('opentype');
}

/**
* htmlから順にheightを設定しないと子要素のheightを割合指定できない
*/
html {
    height: 100%;
}

html > body {
    height: 100%;
}

html > body > main {
    width: calc(100% - 2px);
    height: calc(100% - 2px);
    min-width:800px;
    min-height:600px;
    text-align: center;
}

/**
* 画面全般（ここからhtml > body > mainは省略）
*/

div.total-field {
    display: flex; /* 子要素を並べる */
    width: 100%;
    max-height: 96vh;
}
div.total-field::after {
    padding-top: 75%; /* アスペクト比を固定する手法 */
    display: block;
    content: "";
}

/**
* ゲームエリアUI
*/

div.total-field > div.game-field {
    width: 75%;
    border: 1px solid orange;
    background: #5d993a;
}

/* 雀卓に相当するフィールド */
div.total-field > div.game-field > div.play-field {
    position: relative; /* この要素を基準に子要素を相対配置するために必要 */
    width: calc(100% -1px); /* heightはafter疑似要素で調整 */
    border: 1px solid blue;
    background: #3d761b;
}
div.total-field > div.game-field > div.play-field::after {
    padding-top: 85%; /* 雀卓エリアのheight、afterで調整する理由は上下方向にウィンドウをリサイズした時にレイアウトが崩れないから */
    display: block;
    content: "";
}

div.total-field > div.game-field > div.play-field > div.self-player {
    position: absolute;
    width: 72%;
    height: 16%;
    bottom:0; /* 親要素に対し下揃えにする（固定幅要素向け） */
    left:0; /* 親要素に対し左右中央揃えにするために必要（固定幅要素向け） */
    right:0; /* 親要素に対し左右中央揃えにするために必要（固定幅要素向け） */
    margin:auto; /* 親要素に対し左右中央揃えにするために必要（固定幅要素向け） */
    border: 1px solid purple;
}

div.total-field > div.game-field > div.play-field > div.left-player {
    position: absolute;
    width: 72%;
    height: 16%;
    left:0; /* 親要素に対し左揃えにする（固定幅要素向け） */
    top:0; /* 親要素に対し上下中央揃えにするために必要（固定幅要素向け） */
    bottom:0; /* 親要素に対し上下中央揃えにするために必要（固定幅要素向け） */
    margin:auto; /* 親要素に対し左右中央揃えにするために必要 */
    transform: rotate(90deg) translate(0, 210%); /* 要素自身から見て時計回りに90度回転、下に移動 */
    border: 1px solid purple;
}

div.total-field > div.game-field > div.play-field > div.opposite-player {
    position: absolute;
    width: 72%;
    height: 16%;
    top:0; /* 親要素に対し上揃えにする（固定幅要素向け） */
    left:0; /* 親要素に対し左右中央揃えにするために必要（固定幅要素向け） */
    right:0; /* 親要素に対し左右中央揃えにするために必要（固定幅要素向け） */
    margin:auto; /* 親要素に対し左右中央揃えにするために必要（固定幅要素向け） */
    transform: rotate(180deg); /* 要素自身から見て時計回りに180度回転 */
    border: 1px solid purple;
}

div.total-field > div.game-field > div.play-field > div.right-player {
    position: absolute;
    width: 72%;
    height: 16%;
    right:0; /* 親要素に対し右揃えにする（固定幅要素向け） */
    top:0; /* 親要素に対し上下中央揃えにするために必要（固定幅要素向け） */
    bottom:0; /* 親要素に対し上下中央揃えにするために必要（固定幅要素向け） */
    margin:auto; /* 親要素に対し左右中央揃えにするために必要 */
    transform: rotate(-90deg) translate(0, 210%); /* 要素自身から見て時計回りに-90度回転、下に移動 */
    border: 1px solid purple;
}

/* 手牌の配置スペース */
div.total-field > div.game-field > div.play-field > div[class$="player"] > div[class$="player-hand-tiles"] {
    position: absolute; /* 上下左右に配置するために必要 */
    width: calc(100% - 3px);
    left: 0px; /* 左に張り付かせる */
    bottom: 3px; /* 下から指定のスペースを開けて張り付かせる */
    margin: 0;
    border: 1px solid orangered;
    display: inline-flex; /* 子要素の配置方法を指定。横に並べる。 */
    justify-content: space-between; /* アイテムを均等に分散する。最初のアイテムは始端に接する。最後のアイテムは終端に接する。 */
}

/* 元からある手牌とツモ牌のレイアウト */
div.total-field > div.game-field > div.play-field > div[class$="player"] > div[class$="player-hand-tiles"] > div[class*="player-hand-tiles"] {
    border: 1px solid yellow;
    display: flex;
    justify-content: center;
    align-items: center;
}

/* 手牌画像のデザイン */
div.total-field > div.game-field > div.play-field > div[class$="player"] > div[class$="player-hand-tiles"] > div[class*="player-hand-tiles"] > img[id*="player-hand-tile"] {
    float: left;
    width: 3vw; /* 画像のアスペクト比は固定されるので、小さい方の辺のサイズのみ指定でOK */
    min-width: 17px;
    border: 1px solid rgba(255, 255, 255, 0.0); /* マウスオーバー時にborderを強調するので、事前に透過率最大の白枠を作る */
}

/* 手牌画像のデザイン（マウスオーバー時） */
div.total-field > div.game-field > div.play-field > div[class$="player"] > div[class$="player-hand-tiles"] > div[class*="player-hand-tiles"] > img[id*="player-hand-tile"]:hover {
    border: 1px solid orangered;
}

/* 副露牌の配置スペース */
div.total-field > div.game-field > div.play-field > div[class$="player"] > div[class$="player-melds"] {
    position: absolute; /* 上下左右に配置するために必要 */
    width: calc(100% - 3px);
    left: 0px; /* 左に張り付かせる */
    bottom: calc(45% + 3px); /* 下から指定のスペースを開けて張り付かせる */
    margin: 0;
    border: 1px solid orangered;
    display: inline-flex; /* 子要素の配置方法を指定。横に並べる。 */
    justify-content: space-between; /* アイテムを均等に分散する。最初のアイテムは始端に接する。最後のアイテムは終端に接する。 */
}

/* 副露牌の配置スペースでの各面子 */
div.total-field > div.game-field > div.play-field > div[class$="player"] > div[class$="player-melds"] > div[class*="player-meld"] {
    border: 1px solid yellow;
}

/* 副露牌画像のサイズ */
div.total-field > div.game-field > div.play-field > div[class$="player"] > div[class$="player-melds"] > div[class*="player-meld"] > img[id*="tile"] {
    float: left;
    width: 2vw; /* 画像のアスペクト比は固定されるので、小さい方の辺のサイズのみ指定でOK */
    min-width: 17px;
}

/* 卓中央の捨て牌と情報エリア */
div.total-field > div.game-field > div.play-field > div.table-center {
    position: absolute;
    width: 72%;
    height: 67%;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    margin: auto;
    border: 1px solid magenta;
}

/* 捨て牌エリア（全プレイヤー共通レイアウト） */
div.total-field > div.game-field > div.play-field > div.table-center > div[class*="-discards"] {
    position: absolute;
    width: 39%; /* 改変時は注意（手牌の牌を横6縦4にならべたサイズ） */
    margin: auto;
    display: inline-flex; /* この要素はflexコンテナとなり、子要素は自動的にflexアイテムとなる */
    flex-direction: row; /* 横並びにする */
    flex-wrap: wrap; /* 画面幅に収まらない場合は折り返す */
    align-content:flex-start;  /* 上に寄せる */
    align-items: flex-start; /* 初期値は子要素を引き伸ばすので、元サイズを維持しつつ寄せる */
    justify-content: space-between; /* アイテムを均等に分散する。最初のアイテムは始端に接する。最後のアイテムは終端に接する。 */
    border: 1px solid red;
}

/* 捨て牌エリア（プレイヤー） */
div.total-field > div.game-field > div.play-field > div.table-center > div.self-discards {
    height: 41%; /* 改変時は注意（手牌の牌を横6縦4にならべたサイズ） */
    bottom: 0;
    left: 0;
    right: 0;
    transform-origin: bottom;
    transform:scale(0.95);
}

/* 捨て牌エリア（上家） */
div.total-field > div.game-field > div.play-field > div.table-center > div.left-discards {
    height: 40%; /* 改変時は注意（手牌の牌を横6縦4にならべたサイズ） */
    bottom: 50%; /* 親要素の縦の中央までずれる */
    left: 0;
    transform-origin: left bottom;
    transform: rotate(90deg) translate(-50%, 0) scale(0.95); /* 左下を原点に反時計周りに90度回転させ、右に自身分のサイズ移動し、下に自身の半分分移動する */
}

/* 捨て牌エリア（対面） */
div.total-field > div.game-field > div.play-field > div.table-center > div.opposite-discards {
    height: 41%; /* 改変時は注意（手牌の牌を横6縦4にならべたサイズ） */
    top: 0;
    left: 0;
    right: 0;
    transform-origin: top;
    transform:rotate(-180deg) translate(0%, -95%) scale(0.95);
}

/* 捨て牌エリア（下家） */
div.total-field > div.game-field > div.play-field > div.table-center > div.right-discards {
    height: 40%; /* 改変時は注意（手牌の牌を横6縦4にならべたサイズ） */
    bottom: 50%; /* 親要素の縦の中央までずれる */
    right: 0;
    transform-origin: right bottom;
    transform: rotate(-90deg) translate(50%, 0) scale(0.95); /* 右下を原点に反時計周りに90度回転させ、下に自身の半分分移動する */
}

/* 捨て牌エリアの牌のレイアウト */
div.total-field > div.game-field > div.play-field > div.table-center > div[class$="discards"] > img[id*="-discard-tile"] {
    height: 25%; /* 画像のアスペクト比は固定されるので、小さい方の辺のサイズのみ指定でOK、横6枚並べるので16.6% */
    min-width: 17px;
}

/* 捨て牌エリアの牌ライン */
div.total-field > div.game-field > div.play-field > div.table-center > div[class$="discards"] > div[class*="-discard-line"] {
    display: flex;
    width: 100%;
    height: 24%;
    border: 1px solid yellow;
}

/* 山牌情報エリア */
div.total-field > div.game-field > div.play-field > div.table-center > div.info-area-center {
    position: absolute;
    width: 39%; /* 改変時は注意（捨て牌エリアとの兼ね合い） */
    height: 20%; /* 改変時は注意（捨て牌エリアとの兼ね合い） */
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    margin: auto;
    border: 1px solid blue;
}

/* 山牌の枚数表示テキスト */
div.total-field > div.game-field > div.play-field > div.table-center > div.info-area-center > span[id="wall-tiles-count"]::before {
    content: "残り "
}
div.total-field > div.game-field > div.play-field > div.table-center > div.info-area-center > span[id="wall-tiles-count"] {
    position: absolute; /*以下、transformまで中央配置のための設定 */
    top: 50%;
    left: 50%;
    transform: translateY(-50%) translateX(-50%);
    padding: 0.2em 0.4em;
    color: tomato;
    background-color: white;
    border: double 6px orange; /* 境界線を2重にする */
    border-radius: 3px; /* 角を丸める */
    font-family: 'SourceHanSansJP-Normal';
    font-size: 13px;
    font-weight: bold;
    text-align: center;
}
div.total-field > div.game-field > div.play-field > div.table-center > div.info-area-center > span[id="wall-tiles-count"]::after {
    content: " 枚"
}

/* 操作ボタン情報表示エリア */
div.total-field > div.game-field > div.controller-field {
    width: 100%;
    border: 1px solid magenta;
    display: inline-flex; /* 子要素の配置方法を指定。横に並べる。 */
    justify-content: flex-start; /* アイテムを均等に分散する。最初のアイテムは始端に接する。最後のアイテムは終端に接する。 */
}

/* システム系操作ボタン情報表示エリア */
div.total-field > div.game-field > div.controller-field > div.system-buttons {
    width: calc(14% - 4px);
    right: 0px;
    border: 1px solid Chartreuse;
}

/* システム系操作ボタンのデザイン */
div.total-field > div.game-field > div.controller-field > div.system-buttons > button {
    cursor: pointer;
    width: 75%;
    height: 28px;
    font-family: 'SourceHanSansJP-Normal';
    font-size: 12px;
    font-weight: bold;
    text-align: center;
    line-height: 1;
    border-radius: 12px 12px 12px 12px; /* 上 右 下 左 */
    border: 3px solid red;
    background-color: rgba(255, 255, 255, 1.0);
    color: red; /* 文字色 */
    transition: .2s all;
}

/* システム系操作ボタンのデザイン（マウスオーバー時） */
div.total-field > div.game-field > div.controller-field > div.system-buttons > button:hover {
    border: 3px solid red;
    background-color: rgba(255, 0, 0, 1.0); /* red */
    color: rgba(255, 255, 255, 1.0);
}

/* チー、ポン、カン、ツモ/ロンボタン情報表示エリア */
div.total-field > div.game-field > div.controller-field > div.game-buttons {
    width: 72%;
    left: 0px;
    border: 1px solid blue;
    display: inline-flex; /* 子要素の配置方法を指定。横に並べる。 */
    justify-content: space-around; /* 子要素を均等に分散する。最初の子要素の始端、最後の子要素の終端にもスペースを設ける。 */
}

/* チー、ポン、カン、ツモ/ロンのボタンデザイン */
div.total-field > div.game-field > div.controller-field > div.game-buttons > button {
    cursor: pointer;
    width: 20%;
    height: 28px;
    font-family: 'SourceHanSansJP-Normal';
    font-size: 12px;
    font-weight: bold;
    text-align: center;
    line-height: 1;
    border-radius: 12px 12px 12px 12px; /* 上 右 下 左 */
    border: 3px solid orange;
    background-color: rgba(255, 255, 255, 1.0);
    color: tomato; /* 文字色 */
    transition: .2s all;
}

/* チー、ポン、カン、ツモ/ロンのボタンデザイン（マウスオーバー時） */
div.total-field > div.game-field > div.controller-field > div.game-buttons > button:hover {
    border: 3px solid orange;
    background-color: rgba(255, 165, 0, 1.0); /* orange */
    color: rgba(255, 255, 255, 1.0);
}

/* 補足情報表示エリア */
div.total-field > div.game-field > div.hint-field {
    width: 100%;
    border: 1px solid orange;
}

/**
* 情報エリアUI
*/

div.total-field > div.info-field {
    width: 25%;
    /* border: 1px solid lime; */
    background: #b4df9a;
}

div.total-field > div.info-field > div.message-field {
    width: 100%;
    height: 70%;
    /* border: 1px solid magenta; */
}

div.total-field > div.info-field > div.message-field > span {
    width: 100%;
    font-family: 'SourceHanSerifJP-Medium';
}

div.total-field > div.info-field > div.message-field > textarea {
    width: 97%;
    height: 93%;
    resize: none;
}

/**
* 送信エリアUI
*/

div.total-field > div.info-field > div.controller-field {
    width: 100%;
    height: 30%;
    /* border: 1px solid cyan; */
    background: #86ba67;
}

div.total-field > div.info-field > div.controller-field > textarea {
    width: 97%;
    height: 80%;
    resize: none;
}
